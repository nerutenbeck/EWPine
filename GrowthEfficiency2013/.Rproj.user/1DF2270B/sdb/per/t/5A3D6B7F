{
    "contents" : "###########################################################\n###\n### White Pine Growth Efficiecy Over Time\n### Nathan E. Rutenbeck\n### University of Maine School of Forest Resources\n### 2013\n###\n###########################################################\n\nrm(list=ls())\noptions(show.signif.stars=F)\nwindows()\n\nlibrary(ggplot2)\nlibrary(reshape2)\nlibrary(doBy)\nlibrary(plyr)\n\n################## Data preparation\n\n# Import plots\nplots.load<-read.table('Plots.txt',head=T,sep='\\t') # Load plot data\nplots.cl<-plots.load[,c(1:8,15)] # Drop unused columns\nnames(plots.cl)<-c('plotid','stand','plot','standid','trt','plot.ha','plot.m2','exp.fac','SI') # rename variables\nplots<-plots.cl # Clean plots object\n\nsummary(plots)\n\n# Import litterfall leaf areas from plots, clean variables, change names, reorder\nlitter.load<-read.table('Plot_litterfall.txt',head=T,sep='\\t') # litterfall data\nlitter.cl<-litter.load[,c(1:7)] # Clean litter object\nnames(litter.cl)<-c('year','stand','trt','plot','plotid','LAI','LAI.SE') # rename variables\nlitter<-orderBy(~plotid+year,data=litter.cl) # clean up order\n\nsummary(litter)\n\nlai.plot<-ggplot(litter,aes(x=year,y=LAI))+geom_point()+\n  geom_errorbar(aes(ymax=LAI+LAI.SE,ymin=LAI-LAI.SE))\nlai.plot+facet_wrap(~plot) # LAI trends over time at the plot level\n\n# Import tree list and measurements from database\nDBtrees.load<-read.table('Trees.txt',head=T,sep='\\t') # tree measurements\nDBtrees.cl<-DBtrees.load[,c(3:8,2,9:12)] # tree.old matches tree number in windendro data....\nnames(DBtrees.cl)<-c('stand','plotid','plot','subplot','tree','tree.old','year','DBH','LLB','LLW','ht') # rename variables\nDBtrees<-orderBy(~subplot+tree+year,data=DBtrees.cl) #clean up order\n\nsummary(DBtrees)\n\nDBtrees<-subset(DBtrees,DBH>0) # Select trees with diameters >0\n\n# Read in ring data, get unique index, add calculated values\n\nwin<-read.table('windendro.txt',head=T,sep='\\t') # ring data\nwin.cl<-win[,c(1:6,13,38:ncol(win))] # Remove unused columns\nwinmelt<-melt(win.cl,id=1:8,na.rm=T) # Reshape data to desired structure\nwinmelt$Age<-unclass(winmelt$variable) # translate variables into ages\nwinmelt.cl<-winmelt[,c(4:6,1,3,7:8,10:11)] # Drop unused columns\nnames(winmelt.cl)<-c('stand','plot','subplot','tree', # Rename columns\n                     'pathid','ringcount','pathlength','seglength','age')\nsummary(winmelt.cl)\nwinmelt.cl[winmelt.cl$seglength>20,] #Look for outliers\nwinmelt.cl<-winmelt.cl[winmelt.cl$seglength<20,] # Remove ridiculous outliers (only two)\nhist(winmelt.cl$seglength) # Look at histogram of segment lengths\n\n# Make sure ring data identifiers match those of the Database trees\nnames(winmelt.cl)[4]<-'tree.old' # rename tree number to match field in database\n\nlevels(winmelt.cl$stand)%in%levels(DBtrees$stand) # Confirm that stand names match\nlevels(winmelt.cl$stand)\nlevels(DBtrees$stand)\nlevels(DBtrees$stand)[7]<-'Nutting' # Change stand name in DBtrees object\nlevels(winmelt.cl$stand)%in%levels(DBtrees$stand) # Re-confirm that stand names match\n\nlevels(winmelt.cl$plot)%in%levels(DBtrees$plot) # Confirm that plot names match\nlevels(winmelt.cl$subplot)%in%levels(DBtrees$subplot) # Confirm that subplot names match\n\ntreeids<-data.frame(treeid=1:nrow(unique(winmelt.cl[1:4])), # Give each tree a unique ID number\n                    orderBy(~stand+plot+subplot+tree.old,\n                            data=unique(winmelt.cl[1:4])))\nhead(treeids)\nnrow(treeids)\n\nrings.temp1<-merge(winmelt.cl,treeids,by=c('stand','plot','subplot','tree.old')) # Merge ring data with treeids\nrings.temp2<-ddply(rings.temp1,.(treeid),mutate,year=2011-max(age)+age) # Calculate year for each ring\n\nrings.temp3<-orderBy(~stand+plot+subplot+tree.old+year,data=rings.temp2) # Order correctly by tree ID and year\n\n# Calculate mean segment length and area increment for each year.\nrings.mean<-ddply(rings.temp3,.(stand,plot,subplot,tree.old,treeid,year,age),summarize,\n                  mean.seg=mean(seglength),\n                  ainc.mm=pi*I(mean(seglength)^2)) \n\n# Predicted DIB in a given year will be the cumulative sum of average diameter increments\nrings<-ddply(rings.mean,.(treeid),mutate,\n             RIB=cumsum(mean.seg)/10,\n             DIB=2*cumsum(mean.seg)/10,\n             ainc.cm=ainc.mm/100) # Calculate predicted radius and diameter\nsummary(rings)\ntreeids$treeid%in%rings$treeid # nothing dropped...\n\n\n# Merge to get measured diameters and ring data all in the same place\n\ntrees.both<-merge(DBtrees,rings,by=c('stand','plot','subplot','tree.old','year'))\n\nsummary(trees.both)\n\n\nlevels(rings$stand)%in%levels(trees.both$stand) # Confirm stands match\nlevels(rings$plot)%in%levels(trees.both$plot) # confirm plots match\nlevels(rings$subplot)%in%levels(trees.both$subplot) # Confirm subplots match\nmiss<-treeids$treeid%in%trees.both$treeid # Lost some trees!\nlost<-treeids[!miss,]\nlost # Only two trees in rings but not in database\n# I have to live with it. I can't find plausible matches\n",
    "created" : 1380806589554.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3429957385",
    "id" : "5A3D6B7F",
    "lastKnownWriteTime" : 1380808443,
    "path" : "~/research/WP/WP_GE/Data_prep.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}