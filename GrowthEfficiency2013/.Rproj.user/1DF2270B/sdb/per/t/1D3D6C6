{
    "contents" : "###########################################################\n###\n### White Pine Growth Efficiecy Over Time\n### Nathan E. Rutenbeck\n### University of Maine School of Forest Resources\n### 2013\n###\n###########################################################\n\nsource('Data_prep.R')\nlibrary(arm)\n\n########################### Model Fitting with lme4\n\n# my own residual plot function\nrplot<-function(mod,...){\n  plot(resid(mod)~fitted(mod),pch=20,...)\n  abline(0,0,lty=3)\n}\n\n# Mean Absolute Bias function\nMAB<-function(model){\n  mab<-sum(abs(resid(model)))/length(resid(model))\n  return(mab)\n}\n\n# Root Mean Square Error\nRMSE<-function(model){\n  rmse<-sqrt(I(sum(I(resid(model)^2)))/length(resid(model)))\n  return(rmse)\n}\n\n# Fit a series of diameter models to predict diameter in a given year\n\nDBH.mod1<-lmer(DBH~DIB+(1+DIB|treeid),data=trees.both)\nDBH.mod2<-lmer(DBH~DIB+ht+(1+DIB+ht|treeid),data=trees.both)\nDBH.mod3<-lmer(DBH~DIB+ht+age+(1+DIB+ht+age|treeid),data=trees.both)\nanova(DBH.mod1,DBH.mod2,DBH.mod3)\n\n# Plot model fits for visual comparison\n\npdf('./DBH_fit.pdf',height=8,width=10)\npar(mfrow=c(3,1))\nrplot(DBH.mod1,ylim=c(-3,3), main='DBH~DIB')\nrplot(DBH.mod2,ylim=c(-3,3), main='DBH~DIB+ht')\nrplot(DBH.mod3,ylim=c(-3,3), main='DBH~DIB+ht+age') # Definitely the best.\npar(mfrow=c(1,1))\n\ndbh.resids<-melt(data.frame('DIB'=resid(DBH.mod1),'DIB+ht'=resid(DBH.mod2),'DIB+ht+age'=resid(DBH.mod3)))\n\ndbh.resid.hist<-ggplot(dbh.resids,aes(x=value))+geom_histogram(binwidth=0.1)+\n  xlab('DBH bias (cm)')+ggtitle('Residuals of Diameter Models')+facet_wrap(~variable)\n\ndbh.fitted<-melt(data.frame('DIB'=fitted(DBH.mod1),\n                            'DIB.ht'=fitted(DBH.mod2),'DIB.ht.age'=fitted(DBH.mod3)))\ndbh.fitted$obs<-rep(trees.both$DBH,3)\n\ndbh.fit.plot<-ggplot(dbh.fitted,aes(x=obs,y=value))+geom_point()+\n  geom_abline(slope=1,intercept=0)+facet_wrap(~variable)+xlab('Observed DBH')+ylab('Fitted DBH')\n\ndbh.fit.num<-melt(data.frame(model=c('DIB','DIB+ht','DIB+ht+age'),\n                             'AIC'=AIC(DBH.mod1,DBH.mod2,DBH.mod3)[[2]],\n                             'BIC'=BIC(DBH.mod1,DBH.mod2,DBH.mod3)[[2]]),id='model')\n\ndbh.fit.plot2<-ggplot(dbh.fit.num,aes(x=variable,y=value))+\n  geom_bar(stat='identity',aes(fill=variable))+facet_wrap(~model)\n\ndbh.fit.num2<-melt(data.frame(model=c('DIB','DIB+ht','DIB+ht+age'),\n                              'RMSE'=c(RMSE(DBH.mod1),RMSE(DBH.mod2),RMSE(DBH.mod3)),\n                              'MAB'=c(MAB(DBH.mod1),MAB(DBH.mod2),MAB(DBH.mod3))))\n\ndbh.fit.plot3<-ggplot(dbh.fit.num2,aes(x=variable,y=value))+\n  geom_bar(stat='identity',aes(fill=variable))+facet_wrap(~model)\n\ndbh.resid.hist\ndbh.fit.plot\ndbh.fit.plot2\ndbh.fit.plot3 \ndev.off()\n\nprint(dbh.fit.num)\nprint(dbh.fit.num2) # compare numerically\n\ndisplay(DBH.mod1)\ndisplay(DBH.mod1)\ndisplay(DBH.mod3) # Will use this model for volume prediction\n\n\nDBH.mod.coefs<-data.frame(treeid=rownames(coef(DBH.mod3)$treeid),\n                          coef(DBH.mod3)$treeid[1],coef(DBH.mod3)$treeid[2],\n                          coef(DBH.mod3)$treeid[3],coef(DBH.mod3)$treeid[4])\nnames(DBH.mod.coefs)<-c('treeid','d.b0','d.b1','d.b2','d.b3')\n\nhead(DBH.mod.coefs) # these are the varying coefficients for each of the J trees\n\n# I would like to display the model with the data for each tree, but that is hard to do\n# with so many predictors\n\n# DBH.plot<-ggplot(trees.both,aes(x=DIB,y=DBH))+\n#   geom_point()+geom_abline(data=DBH.mod.coefs,aes(intercept=DBH.ahat,slope=DBH.bhat))+\n#   facet_wrap(~treeid)\n\n# DBH.plot # shows tree level slope, intercept differences, individual prediction bias\n\n# Height models\n\nht.mod1<-lmer(ht~age+(1+age|treeid),trees.both)\nht.mod2<-lmer(ht~DIB+(1+DIB|treeid),trees.both)\nht.mod3<-lmer(ht~DIB+age+(1+DIB+age|treeid),trees.both)\nanova(ht.mod1,ht.mod2,ht.mod3) # Here it looks like model 3 performs the best.\n\npdf('./Ht_fit.pdf', height=8,width=10)\n\npar(mfrow=c(3,1))\nrplot(ht.mod1,ylim=c(-3,3),main='ht~age')\nrplot(ht.mod2,ylim=c(-3,3),main='ht~DIB')\nrplot(ht.mod3,ylim=c(-3,3),main='ht~DIB+age')\npar(mfrow=c(1,1))\n\n# Residuals above could be better...\n# I also wonder if I could improve height predictions by incorporating stand and plot effects.\nht.mod4<-update(ht.mod3,.~.+stand)\nht.mod5<-update(ht.mod3,.~.+plot)\nht.mod6<-update(ht.mod3,.~.+subplot)\n# Can't add multiple layers of plot/subplot because of fitting problems from correlation matrix.\n\nanova(ht.mod3,ht.mod4,ht.mod5,ht.mod6) # Here it looks like model 5 would improve things\n# Theoretically I should add plot factors as random effects to reflect experimental structure? \n# I don't have time now to explore\n\n#rplot(ht.mod5,ylim=c(-3,3),main='ht~plot+DIB+age')\n\nht.resids<-melt(data.frame('age'=resid(ht.mod1),'DIB'=resid(ht.mod2),\n                           'DIB+age'=resid(ht.mod3),'DIB+age+plot'=resid(ht.mod5)))\n\nht.resid.hist<-ggplot(ht.resids,aes(x=value))+geom_histogram(binwidth=0.1)+\n  xlab('ht bias (meters)')+ggtitle('Residuals of Height Models')+facet_wrap(~variable,nrow=1)\n\nht.fitted<-melt(data.frame('age'=fitted(ht.mod1),\n                           'DIB'=fitted(ht.mod2),\n                           'DIB.age'=fitted(ht.mod3),\n                           'DIB.age.plot'=fitted(ht.mod5)))\nht.fitted$obs<-rep(trees.both$ht,4)\n\nht.fit.plot<-ggplot(ht.fitted,aes(x=obs,y=value))+geom_point()+\n  geom_abline(slope=1,intercept=0)+facet_wrap(~variable)+\n  xlab('Observed Height')+ylab('Fitted Height')\n\nht.fit.num<-melt(data.frame(model=c('age','DIB','DIB.age','DIB.age.plot'),\n                            'AIC'=AIC(ht.mod1,ht.mod2,ht.mod3,ht.mod5)[[2]],\n                            'BIC'=BIC(ht.mod1,ht.mod2,ht.mod3,ht.mod5)[[2]]),id='model')\n\nht.fit.plot2<-ggplot(ht.fit.num,aes(x=variable,y=value))+\n  geom_bar(stat='identity',aes(fill=variable))+facet_wrap(~model,nrow=1)\n\nht.fit.num2<-melt(data.frame(model=c('age','DIB','DIB.age','DIB.age.plot'),\n                             'RMSE'=c(RMSE(ht.mod1),RMSE(ht.mod2),RMSE(ht.mod3),RMSE(ht.mod5)),\n                             'MAB'=c(MAB(ht.mod1),MAB(ht.mod2),MAB(ht.mod3),MAB(ht.mod5))))\n\nht.fit.plot3<-ggplot(ht.fit.num2,aes(x=variable,y=value))+\n  geom_bar(stat='identity',aes(fill=variable))+facet_wrap(~model,nrow=1)\n\nht.resid.hist\nht.fit.plot\nht.fit.plot2\nht.fit.plot3\n\ndev.off()\n\nprint(ht.fit.num)\nprint(ht.fit.num2) # compare numerically\n\ndisplay(ht.mod1)\ndisplay(ht.mod2)\ndisplay(ht.mod3)\ndisplay(ht.mod5) # Definitely select this one eventually, \n# but I don't have time to build the model matrix right now...\n\nht.mod.coefs<-data.frame(treeid=rownames(coef(ht.mod3)$treeid),coef(ht.mod3)$treeid)\n#                          coef(ht.mod5)$treeid[1],coef(ht.mod5)$treeid[2]\n\nnames(ht.mod.coefs)<-c('treeid','ht.b0','ht.b1','ht.b2') #coefficients for heights\n\nhead(ht.mod.coefs)",
    "created" : 1380806962508.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1034110901",
    "id" : "1D3D6C6",
    "lastKnownWriteTime" : 1380808442,
    "path" : "~/research/WP/WP_GE/lme4_models.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}